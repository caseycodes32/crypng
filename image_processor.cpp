#include "image_processor.h"

std::string test_aes()
{
    std::string temp;

    unsigned char private_key[] = { 0x2b, 0x7e, 0x15, 0x16, 0x28, 0xae, 0xd2, 0xa6, 0xab, 0xf7, 0x15, 0x88, 0x09, 0xcf, 0x4f, 0x3c };
    unsigned char init_vector[]  = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };
    unsigned char text[]  = { 0x68, 0x65, 0x68, 0x65, 0x20, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x20,
                            0x74, 0x65, 0x78, 0x74, 0x20, 0x6E, 0x79, 0x61, 0x20, 0x3A, 0x33, 0x20,
                            0x6F, 0x6B, 0x20, 0x6D, 0x61, 0x6B, 0x65, 0x20, 0x74, 0x68, 0x69, 0x73,
                            0x20, 0x61, 0x20, 0x6C, 0x69, 0x74, 0x74, 0x6C, 0x65, 0x20, 0x6C, 0x6F,
                            0x6E, 0x67, 0x65, 0x72, 0x20, 0x61, 0x6E, 0x64, 0x20, 0x64, 0x69, 0x76,
                            0x69, 0x73, 0x69, 0x62 };

    struct AES_ctx ctx;
    AES_init_ctx_iv(&ctx, private_key, init_vector);
    AES_CBC_encrypt_buffer(&ctx, text, 64);
    AES_init_ctx_iv(&ctx, private_key, init_vector);
    AES_CBC_decrypt_buffer(&ctx, text, 64);

    return std::string(reinterpret_cast<char*>(text), 64);
}